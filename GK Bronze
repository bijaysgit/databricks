from pyspark.sql.types import *

schema = StructType([StructField('BeginDateTime', StringType(), True), StructField('BusinessDayDate', StringType(), True), StructField('CurrencyCode', StringType(), True), StructField('EndDateTime', StringType(), True), StructField('OperatorID', StructType([StructField('_OperatorName', StringType(), True), StructField('_VALUE', StringType(), True), StructField('_WorkerID', StringType(), True)]), True), StructField('RetailStoreID', StringType(), True), StructField('RetailTransaction', StructType([StructField('Customer', StructType([StructField('Address', StructType([StructField('AddressLine', StructType([StructField('_TypeCode', StringType(), True), StructField('_VALUE', StringType(), True)]), True), StructField('City', StringType(), True), StructField('PostalCode', StringType(), True)]), True), StructField('CST:XXCustom02', StringType(), True), StructField('CST:XXCustom03', StringType(), True), StructField('CST:XXCustom04', StringType(), True), StructField('CustomerID', StringType(), True), StructField('CustomerName', StructType([StructField('FullName', StringType(), True), StructField('Name', ArrayType(StructType([StructField('_Location', StringType(), True), StructField('_VALUE', StringType(), True)]), True), True)]), True), StructField('EMail', StructType([StructField('EMailAddress', StringType(), True)]), True), StructField('SES:CustomerGenericFlag', StringType(), True), StructField('SES:CustomerGroup', StringType(), True), StructField('SES:CustomerGroupDefaultBonusPointsCount', StringType(), True), StructField('SES:CustomerIdentifier', StringType(), True), StructField('SES:CustomerType', StringType(), True), StructField('SES:CustomerTypeDescription', StringType(), True), StructField('SES:EntryMethod', StringType(), True), StructField('Telephone', StructType([StructField('FullTelephoneNumber', StringType(), True), StructField('_TypeCode', StringType(), True)]), True)]), True), StructField('LineItem', ArrayType(StructType([StructField('BeginDateTime', StringType(), True), StructField('Return', StructType([StructField('Associate', StructType([StructField('AssociateID', StructType([StructField('_OperatorName', StringType(), True), StructField('_VALUE', StringType(), True)]), True)]), True), StructField('Description', StringType(), True), StructField('ExtendedAmount', StringType(), True), StructField('ItemID', StructType([StructField('_Name', StringType(), True), StructField('_VALUE', StringType(), True)]), True), StructField('MerchandiseHierarchy', StringType(), True), StructField('POSIdentity', ArrayType(StructType([StructField('POSItemID', StringType(), True), StructField('_POSIDType', StringType(), True)]), True), True), StructField('Quantity', StructType([StructField('_UnitOfMeasureCode', StringType(), True), StructField('_Units', StringType(), True), StructField('_VALUE', StringType(), True)]), True), StructField('RegularSalesUnitPrice', StructType([StructField('_Quantity', StringType(), True), StructField('_VALUE', StringType(), True)]), True), StructField('RetailPriceModifier', ArrayType(StructType([StructField('Amount', StructType([StructField('_Action', StringType(), True), StructField('_VALUE', StringType(), True)]), True), StructField('PriceDerivationRule', StructType([StructField('Amount', StructType([StructField('_Action', StringType(), True), StructField('_VALUE', StringType(), True)]), True), StructField('PriceDerivationRuleID', StringType(), True), StructField('SES:AppliedQuantity', StringType(), True), StructField('SES:Origin', StringType(), True)]), True), StructField('PromotionID', StringType(), True), StructField('ReasonCode', StringType(), True), StructField('SES:ExternalOfferID', StringType(), True), StructField('SES:Percent', StructType([StructField('_Action', StringType(), True), StructField('_VALUE', StringType(), True)]), True), StructField('SES:RebateID', StringType(), True), StructField('SES:RebateMethod', StringType(), True), StructField('SequenceNumber', StringType(), True)]), True), True), StructField('SES:AuthorizedForSalesFlag', StringType(), True), StructField('SES:ExtendedPositionAmount', StringType(), True), StructField('SES:ExternalReceiptReferenceList', StructType([StructField('SES:ExternalReceiptReference', StructType([StructField('SES:ExternalTransactionOfflineRedemptionFlag', StringType(), True), StructField('SES:ItemOrigin', StringType(), True), StructField('SES:ReceiptReferenceNumber', StringType(), True)]), True)]), True), StructField('SES:MerchandiseStructureItemFlag', StringType(), True), StructField('SES:ReasonCode', ArrayType(StructType([StructField('_Description', StringType(), True), StructField('_ReasonType', StringType(), True), StructField('_VALUE', StringType(), True)]), True), True), StructField('Tax', ArrayType(StructType([StructField('Amount', StringType(), True), StructField('Percent', StringType(), True), StructField('TaxAuthority', StringType(), True), StructField('TaxGroupID', StringType(), True), StructField('TaxableAmount', StringType(), True), StructField('_TaxSubType', StringType(), True), StructField('_TaxType', StringType(), True), StructField('_TypeCode', StringType(), True)]), True), True), StructField('TaxIncludedInPriceFlag', StringType(), True), StructField('TransactionLink', StructType([StructField('BeginDateTime', StringType(), True), StructField('BusinessDayDate', StringType(), True), StructField('LineItemSequenceNumber', StringType(), True), StructField('RetailStoreID', StringType(), True), StructField('SES:InternalTransactionID', StringType(), True), StructField('SequenceNumber', StringType(), True), StructField('WorkstationID', StringType(), True), StructField('_ReasonCode', StringType(), True)]), True), StructField('_ItemType', StringType(), True)]), True), StructField('SES:DirectVoidFlag', StringType(), True), StructField('SES:KeyedOfflineCode', StringType(), True), StructField('SES:LineItemBinaryDataList', StructType([StructField('SES:BinaryData', ArrayType(StructType([StructField('SES:Content', StringType(), True), StructField('SES:Name', StringType(), True)]), True), True)]), True), StructField('SES:NegativeAmountFlag', StringType(), True), StructField('SES:OperatorBypassApproval', StructType([StructField('SES:ApproverID', StructType([StructField('_ApproverName', StringType(), True), StructField('_VALUE', StringType(), True), StructField('_WorkerID', StringType(), True)]), True), StructField('_ApprovalTypeCode', StringType(), True)]), True), StructField('SES:ReceiptPositionAddonList', StructType([StructField('SES:Addon', ArrayType(StructType([StructField('SES:AddonPos', StringType(), True), StructField('SES:Key', StringType(), True), StructField('SES:Value', StringType(), True)]), True), True)]), True), StructField('Sale', StructType([StructField('Associate', StructType([StructField('AssociateID', StructType([StructField('_OperatorName', StringType(), True), StructField('_VALUE', StringType(), True)]), True)]), True), StructField('Description', StringType(), True), StructField('ExtendedAmount', StringType(), True), StructField('ItemID', StructType([StructField('_Name', StringType(), True), StructField('_VALUE', StringType(), True)]), True), StructField('MerchandiseHierarchy', StringType(), True), StructField('POSIdentity', ArrayType(StructType([StructField('POSItemID', StringType(), True), StructField('_POSIDType', StringType(), True)]), True), True), StructField('Quantity', StructType([StructField('_UnitOfMeasureCode', StringType(), True), StructField('_Units', StringType(), True), StructField('_VALUE', StringType(), True)]), True), StructField('RegularSalesUnitPrice', StructType([StructField('_Quantity', StringType(), True), StructField('_VALUE', StringType(), True)]), True), StructField('RetailPriceModifier', ArrayType(StructType([StructField('Amount', StructType([StructField('_Action', StringType(), True), StructField('_VALUE', StringType(), True)]), True), StructField('PriceDerivationRule', StructType([StructField('Amount', StructType([StructField('_Action', StringType(), True), StructField('_VALUE', StringType(), True)]), True), StructField('PriceDerivationRuleID', StringType(), True), StructField('SES:AppliedQuantity', StringType(), True), StructField('SES:Origin', StringType(), True)]), True), StructField('PromotionID', StringType(), True), StructField('ReasonCode', StringType(), True), StructField('SES:ExternalOfferID', StringType(), True), StructField('SES:Percent', StructType([StructField('_Action', StringType(), True), StructField('_VALUE', StringType(), True)]), True), StructField('SES:RebateID', StringType(), True), StructField('SES:RebateMethod', StringType(), True), StructField('SequenceNumber', StringType(), True)]), True), True), StructField('SES:AuthorizedForSalesFlag', StringType(), True), StructField('SES:ExtendedPositionAmount', StringType(), True), StructField('SES:ExternalReceiptReferenceList', StructType([StructField('SES:ExternalReceiptReference', StructType([StructField('SES:ExternalTransactionOfflineRedemptionFlag', StringType(), True), StructField('SES:ItemOrigin', StringType(), True), StructField('SES:ReceiptReferenceNumber', StringType(), True)]), True)]), True), StructField('SES:GiftCertificateData', StructType([StructField('SES:GiftCertificateType', StringType(), True)]), True), StructField('SES:ItemLink', StructType([StructField('_LinkType', StringType(), True), StructField('_VALUE', StringType(), True)]), True), StructField('SES:MerchandiseStructureItemFlag', StringType(), True), StructField('SerialNumber', StringType(), True), StructField('Tax', ArrayType(StructType([StructField('Amount', StringType(), True), StructField('Percent', StringType(), True), StructField('TaxAuthority', StringType(), True), StructField('TaxGroupID', StringType(), True), StructField('TaxableAmount', StringType(), True), StructField('_TaxSubType', StringType(), True), StructField('_TaxType', StringType(), True), StructField('_TypeCode', StringType(), True)]), True), True), StructField('TaxIncludedInPriceFlag', StringType(), True), StructField('_ItemType', StringType(), True)]), True), StructField('SequenceNumber', StringType(), True), StructField('Tax', StructType([StructField('Amount', StringType(), True), StructField('Percent', StringType(), True), StructField('TaxAuthority', StringType(), True), StructField('TaxGroupID', StringType(), True), StructField('TaxableAmount', StringType(), True), StructField('_TaxSubType', StringType(), True), StructField('_TaxType', StringType(), True), StructField('_TypeCode', StringType(), True)]), True), StructField('Tender', StructType([StructField('Amount', StringType(), True), StructField('Authorization', StructType([StructField('AuthorizationCode', StringType(), True), StructField('AuthorizationDateTime', StringType(), True), StructField('AuthorizingTermID', StringType(), True), StructField('ReferenceNumber', StringType(), True), StructField('RequestedAmount', StringType(), True), StructField('SES:ApprovalCode', StringType(), True), StructField('SES:TerminalTenderDescription', StringType(), True), StructField('SES:TerminalTransactionToken', StringType(), True), StructField('SES:TransactionReferenceNumber', StringType(), True), StructField('SES:TransactionType', StringType(), True), StructField('_ElectronicSignature', StringType(), True), StructField('_ForceOnline', StringType(), True), StructField('_HostAuthorized', StringType(), True), StructField('SES:TransactionCurrencyCode', StringType(), True)]), True), StructField('CST:XXCustom01', StringType(), True), StructField('CST:XXCustom02', StringType(), True), StructField('Cashback', StringType(), True), StructField('CreditDebit', StructType([StructField('ExpirationDate', StringType(), True), StructField('IssueSequence', StringType(), True), StructField('PrimaryAccountNumber', StringType(), True), StructField('ReconciliationCode', StringType(), True), StructField('SES:TraceNumber', StringType(), True), StructField('StartDate', StringType(), True)]), True), StructField('TenderChange', StructType([StructField('Amount', StringType(), True), StructField('TenderID', StringType(), True), StructField('_TenderType', StringType(), True)]), True), StructField('TenderID', StringType(), True), StructField('Voucher', StructType([StructField('SerialNumber', StringType(), True), StructField('_TypeCode', StringType(), True)]), True), StructField('_TenderDescription', StringType(), True), StructField('_TenderType', StringType(), True), StructField('_TypeCode', StringType(), True)]), True), StructField('Voids', StructType([StructField('ItemLink', StructType([StructField('LineItemSequenceNumber', StringType(), True), StructField('SES:VoidReasonCode', StructType([StructField('_ReasonType', StringType(), True), StructField('_VALUE', StringType(), True)]), True), StructField('SequenceNumber', StringType(), True), StructField('_ReasonCode', StringType(), True)]), True)]), True), StructField('_EntryMethod', StringType(), True), StructField('_VoidFlag', StringType(), True)]), True), True), StructField('ReceiptDateTime', StringType(), True), StructField('SES:AmendmentFlag', StringType(), True), StructField('SES:EmailRequestedFlag', StringType(), True), StructField('SES:NegativeTotalFlag', StringType(), True), StructField('Total', ArrayType(StructType([StructField('_TotalType', StringType(), True), StructField('_VALUE', StringType(), True)]), True), True), StructField('TransactionLink', StructType([StructField('BeginDateTime', StringType(), True), StructField('BusinessDayDate', StringType(), True), StructField('EndDateTime', StringType(), True), StructField('RetailStoreID', StringType(), True), StructField('SES:InternalTransactionID', StringType(), True), StructField('SES:ReceiptDateTime', StringType(), True), StructField('SequenceNumber', StringType(), True), StructField('WorkstationID', StringType(), True), StructField('_ReasonCode', StringType(), True)]), True), StructField('_TransactionStatus', StringType(), True)]), True), StructField('SES:BusinessBeginDateTime', StringType(), True), StructField('SES:BusinessEndDateTime', StringType(), True), StructField('SES:FiscalFlag', StringType(), True), StructField('SES:InternalTransactionID', StringType(), True), StructField('SES:KeyedOfflineCode', StringType(), True), StructField('SES:LayawayFlag', StringType(), True), StructField('SES:LoyaltyAccount', StructType([StructField('CustomerID', StringType(), True)]), True), StructField('SES:OperatorBypassApproval', StructType([StructField('SES:ApproverID', StructType([StructField('_ApproverName', StringType(), True), StructField('_VALUE', StringType(), True), StructField('_WorkerID', StringType(), True)]), True), StructField('_ApprovalTypeCode', StringType(), True)]), True), StructField('SES:PostVoidedFlag', StringType(), True), StructField('SES:ReasonCode', StructType([StructField('_ReasonType', StringType(), True), StructField('_VALUE', StringType(), True)]), True), StructField('SES:ReceiptHeaderAddonList', StructType([StructField('SES:Addon', ArrayType(StructType([StructField('CST:XXCustom01', StringType(), True), StructField('CST:XXCustom02', StringType(), True), StructField('SES:AddonPos', StringType(), True), StructField('SES:Key', StringType(), True), StructField('SES:Value', StringType(), True)]), True), True)]), True), StructField('SES:ReceiptReturnedFlag', StringType(), True), StructField('SES:ReceiptTimerList', StructType([StructField('SES:Timer', ArrayType(StructType([StructField('SES:Duration', StringType(), True), StructField('SES:StartTimestamp', StringType(), True), StructField('SES:TimerID', StringType(), True)]), True), True)]), True), StructField('SES:SoftwareVersion', StringType(), True), StructField('SES:TenantID', StringType(), True), StructField('SES:TransactionBinaryDataList', StructType([StructField('SES:BinaryData', ArrayType(StructType([StructField('SES:Content', StringType(), True), StructField('SES:Name', StringType(), True)]), True), True)]), True), StructField('SES:TransactionSoftwareVersion', StringType(), True), StructField('SequenceNumber', StringType(), True), StructField('TillID', StringType(), True), StructField('WorkstationID', StringType(), True), StructField('_CancelFlag', StringType(), True), StructField('_FixVersion', StringType(), True), StructField('_MajorVersion', StringType(), True), StructField('_MinorVersion', StringType(), True), StructField('_SES:InternalFixVersion', StringType(), True), StructField('_SES:InternalMajorVersion', StringType(), True), StructField('_SES:InternalMinorVersion', StringType(), True), StructField('_TrainingModeFlag', StringType(), True), StructField('SourceFilename', StringType(), True), StructField('IngestTimeStamp', TimestampType(), True), StructField('businessdate', DateType(), True)])







from pyspark.sql.types import *
control_schema=StructType([StructField('BeginDateTime', StringType(), True), StructField('BusinessDayDate', StringType(), True), StructField('ControlTransaction', StructType([StructField('BusinessEOD', StructType([StructField('StartDateTimestamp', StringType(), True)]), True), StructField('NoSale', StringType(), True), StructField('OperatorSignOff', StructType([StructField('StartDateTimestamp', StringType(), True)]), True), StructField('OperatorSignOn', StructType([StructField('StartDateTimestamp', StringType(), True)]), True), StructField('ReasonCode', StringType(), True), StructField('SES:AccountedOperatorID', StructType([StructField('_Name', StringType(), True), StructField('_VALUE', StringType(), True)]), True), StructField('SES:CashierStatistics', StructType([StructField('SessionSettle', StructType([StructField('LineItemVoids', StructType([StructField('Amount', StringType(), True), StructField('Count', StringType(), True)]), True), StructField('PostTransactionVoids', StructType([StructField('Amount', StringType(), True), StructField('Count', StringType(), True)]), True), StructField('SES:AccountedOperatorID', StructType([StructField('_Name', StringType(), True), StructField('_VALUE', StringType(), True)]), True), StructField('SES:DirectLineItemVoids', StructType([StructField('Amount', StringType(), True), StructField('Count', StringType(), True)]), True), StructField('SES:TransactionCancellations', StructType([StructField('Amount', StringType(), True), StructField('Count', StringType(), True)]), True), StructField('TotalMeasures', StructType([StructField('LineItemOpenDepartmentCount', StringType(), True), StructField('LineItemScannedCount', StringType(), True), StructField('NoSaleTransactionCount', StringType(), True), StructField('SES:RegistrationTime', StringType(), True), StructField('SES:TenderTime', StringType(), True)]), True), StructField('TransactionCount', StringType(), True)]), True)]), True), StructField('SES:ForcedSignOffFlag', StringType(), True), StructField('SES:OtherTransactionType', StringType(), True), StructField('SES:StoreEODSummary', StructType([StructField('SessionSettle', StructType([StructField('SES:SalesSummary', ArrayType(StructType([StructField('Amount', StringType(), True), StructField('Count', StringType(), True), StructField('Reason', StructType([StructField('_Name', StringType(), True), StructField('_VALUE', StringType(), True)]), True), StructField('_TypeCode', StringType(), True)]), True), True), StructField('SES:TaxSummary', ArrayType(StructType([StructField('Amount', StringType(), True), StructField('Count', StringType(), True), StructField('SES:TaxAuthorityID', StringType(), True), StructField('SES:TaxGroupID', StringType(), True), StructField('_TypeCode', StringType(), True)]), True), True)]), True)]), True), StructField('TillEOD', StructType([StructField('SessionSettle', StructType([StructField('SES:SalesSummary', ArrayType(StructType([StructField('Amount', StringType(), True), StructField('Count', StringType(), True), StructField('Reason', StructType([StructField('_Name', StringType(), True), StructField('_VALUE', StringType(), True)]), True), StructField('_TypeCode', StringType(), True)]), True), True), StructField('SES:TaxSummary', ArrayType(StructType([StructField('Amount', StringType(), True), StructField('Count', StringType(), True), StructField('SES:TaxAuthorityID', StringType(), True), StructField('SES:TaxGroupID', StringType(), True), StructField('_TypeCode', StringType(), True)]), True), True), StructField('TenderSummary', ArrayType(StructType([StructField('Beginning', StructType([StructField('Amount', StringType(), True), StructField('_TenderType', StringType(), True)]), True), StructField('Over', StructType([StructField('Amount', StringType(), True), StructField('Count', StringType(), True), StructField('_TenderType', StringType(), True)]), True), StructField('Pickup', StructType([StructField('Amount', StringType(), True), StructField('_TenderType', StringType(), True)]), True), StructField('SES:Ending', StructType([StructField('Amount', StringType(), True), StructField('Count', StringType(), True), StructField('_TenderType', StringType(), True), StructField('_TypeCode', StringType(), True)]), True), StructField('SES:Nominal', StructType([StructField('Amount', StringType(), True), StructField('Count', StringType(), True), StructField('_TenderType', StringType(), True), StructField('_TypeCode', StringType(), True)]), True), StructField('SES:SalesTenderNominal', StructType([StructField('Amount', StringType(), True), StructField('Count', StringType(), True), StructField('_TenderType', StringType(), True), StructField('_TypeCode', StringType(), True)]), True), StructField('Short', StructType([StructField('Amount', StringType(), True), StructField('_TenderType', StringType(), True)]), True)]), True), True)]), True)]), True), StructField('SES:ForcedSignOffWorkstationID', StringType(), True)]), True), StructField('CurrencyCode', StringType(), True), StructField('EndDateTime', StringType(), True), StructField('OperatorID', StructType([StructField('_OperatorName', StringType(), True), StructField('_VALUE', StringType(), True), StructField('_WorkerID', StringType(), True)]), True), StructField('RetailStoreID', StringType(), True), StructField('SES:BusinessBeginDateTime', StringType(), True), StructField('SES:BusinessEndDateTime', StringType(), True), StructField('SES:FiscalFlag', StringType(), True), StructField('SES:InternalTransactionID', StringType(), True), StructField('SES:KeyedOfflineCode', StringType(), True), StructField('SES:LayawayFlag', StringType(), True), StructField('SES:LoyaltyAccount', StructType([StructField('CustomerID', StringType(), True)]), True), StructField('SES:OperatorBypassApproval', StructType([StructField('SES:ApproverID', StructType([StructField('_ApproverName', StringType(), True), StructField('_VALUE', StringType(), True), StructField('_WorkerID', StringType(), True)]), True), StructField('_ApprovalTypeCode', StringType(), True)]), True), StructField('SES:PostVoidedFlag', StringType(), True), StructField('SES:ReasonCode', StructType([StructField('_ReasonType', StringType(), True), StructField('_VALUE', StringType(), True)]), True), StructField('SES:ReceiptHeaderAddonList', StructType([StructField('SES:Addon', ArrayType(StructType([StructField('CST:XXCustom01', StringType(), True), StructField('CST:XXCustom02', StringType(), True), StructField('SES:AddonPos', StringType(), True), StructField('SES:Key', StringType(), True), StructField('SES:Value', StringType(), True)]), True), True)]), True), StructField('SES:ReceiptReturnedFlag', StringType(), True), StructField('SES:ReceiptTimerList', StructType([StructField('SES:Timer', ArrayType(StructType([StructField('SES:Duration', StringType(), True), StructField('SES:StartTimestamp', StringType(), True), StructField('SES:TimerID', StringType(), True)]), True), True)]), True), StructField('SES:SoftwareVersion', StringType(), True), StructField('SES:TenantID', StringType(), True), StructField('SES:TransactionBinaryDataList', StructType([StructField('SES:BinaryData', ArrayType(StructType([StructField('SES:Content', StringType(), True), StructField('SES:Name', StringType(), True)]), True), True)]), True), StructField('SES:TransactionSoftwareVersion', StringType(), True), StructField('SequenceNumber', StringType(), True), StructField('TillID', StringType(), True), StructField('WorkstationID', StringType(), True), StructField('_CancelFlag', StringType(), True), StructField('_FixVersion', StringType(), True), StructField('_MajorVersion', StringType(), True), StructField('_MinorVersion', StringType(), True), StructField('_SES:InternalFixVersion', StringType(), True), StructField('_SES:InternalMajorVersion', StringType(), True), StructField('_SES:InternalMinorVersion', StringType(), True), StructField('_TrainingModeFlag', StringType(), True), StructField('SourceFilename', StringType(), True), StructField('IngestTimeStamp', TimestampType(), True), StructField('businessdate', DateType(), True)])




from pyspark.sql.types import *
tender_control_schema=StructType([StructField('BeginDateTime', StringType(), True), StructField('BusinessDayDate', StringType(), True), StructField('CurrencyCode', StringType(), True), StructField('EndDateTime', StringType(), True), StructField('OperatorID', StructType([StructField('_OperatorName', StringType(), True), StructField('_VALUE', StringType(), True), StructField('_WorkerID', StringType(), True)]), True), StructField('RetailStoreID', StringType(), True), StructField('SES:BusinessBeginDateTime', StringType(), True), StructField('SES:BusinessEndDateTime', StringType(), True), StructField('SES:FiscalFlag', StringType(), True), StructField('SES:InternalTransactionID', StringType(), True), StructField('SES:KeyedOfflineCode', StringType(), True), StructField('SES:LayawayFlag', StringType(), True), StructField('SES:LoyaltyAccount', StructType([StructField('CustomerID', StringType(), True)]), True), StructField('SES:OperatorBypassApproval', StructType([StructField('SES:ApproverID', StructType([StructField('_ApproverName', StringType(), True), StructField('_VALUE', StringType(), True), StructField('_WorkerID', StringType(), True)]), True), StructField('_ApprovalTypeCode', StringType(), True)]), True), StructField('SES:PostVoidedFlag', StringType(), True), StructField('SES:ReasonCode', StructType([StructField('_ReasonType', StringType(), True), StructField('_VALUE', StringType(), True)]), True), StructField('SES:ReceiptHeaderAddonList', StructType([StructField('SES:Addon', ArrayType(StructType([StructField('CST:XXCustom01', StringType(), True), StructField('CST:XXCustom02', StringType(), True), StructField('SES:AddonPos', StringType(), True), StructField('SES:Key', StringType(), True), StructField('SES:Value', StringType(), True)]), True), True)]), True), StructField('SES:ReceiptReturnedFlag', StringType(), True), StructField('SES:ReceiptTimerList', StructType([StructField('SES:Timer', ArrayType(StructType([StructField('SES:Duration', StringType(), True), StructField('SES:StartTimestamp', StringType(), True), StructField('SES:TimerID', StringType(), True)]), True), True)]), True), StructField('SES:SoftwareVersion', StringType(), True), StructField('SES:TenantID', StringType(), True), StructField('SES:TransactionBinaryDataList', StructType([StructField('SES:BinaryData', ArrayType(StructType([StructField('SES:Content', StringType(), True), StructField('SES:Name', StringType(), True)]), True), True)]), True), StructField('SES:TransactionSoftwareVersion', StringType(), True), StructField('SequenceNumber', StringType(), True), StructField('TenderControlTransaction', StructType([StructField('SES:AccountedOperatorID', StructType([StructField('_Name', StringType(), True), StructField('_VALUE', StringType(), True)]), True), StructField('SES:PaidIn', StructType([StructField('SES:Amount', StringType(), True), StructField('SES:Reason', StringType(), True), StructField('SES:Tender', ArrayType(StructType([StructField('Amount', StringType(), True), StructField('TenderID', StringType(), True), StructField('_TenderDescription', StringType(), True), StructField('_TenderType', StringType(), True), StructField('_TypeCode', StringType(), True)]), True), True), StructField('SES:TransactionCategoryCode', StringType(), True)]), True), StructField('SES:SafeSettle', StructType([StructField('TenderSummary', ArrayType(StructType([StructField('Over', StructType([StructField('Amount', StringType(), True), StructField('Count', StringType(), True), StructField('_TenderType', StringType(), True)]), True), StructField('SES:Ending', StructType([StructField('Amount', StringType(), True), StructField('Count', StringType(), True), StructField('_TenderType', StringType(), True), StructField('_TypeCode', StringType(), True)]), True), StructField('SES:Nominal', StructType([StructField('Amount', StringType(), True), StructField('Count', StringType(), True), StructField('_TenderType', StringType(), True), StructField('_TypeCode', StringType(), True)]), True)]), True), True)]), True), StructField('SES:TenderLoan', StructType([StructField('SES:Totals', StructType([StructField('Amount', StructType([StructField('_Currency', StringType(), True), StructField('_VALUE', StringType(), True)]), True)]), True), StructField('_TenderDescription', StringType(), True), StructField('_TenderType', StringType(), True)]), True), StructField('SES:TenderLoanCarriedForward', StructType([StructField('SES:Amount', StringType(), True)]), True), StructField('SES:TenderPickup', StructType([StructField('SES:TenderAmount', ArrayType(StructType([StructField('_TenderDescription', StringType(), True), StructField('_TenderType', StringType(), True), StructField('_TypeCode', StringType(), True), StructField('_VALUE', StringType(), True)]), True), True), StructField('SES:TotalAmount', StructType([StructField('_TypeCode', StringType(), True), StructField('_VALUE', StringType(), True)]), True)]), True), StructField('SafeDrop', StructType([StructField('DropAmount', StringType(), True), StructField('DropNumber', StringType(), True), StructField('EnvelopeID', StringType(), True)]), True), StructField('TillSettle', StructType([StructField('SES:TransactionCategoryCode', StringType(), True), StructField('TenderSummary', ArrayType(StructType([StructField('Over', StructType([StructField('Amount', StringType(), True), StructField('Count', StringType(), True), StructField('_TenderType', StringType(), True)]), True), StructField('SES:Ending', StructType([StructField('Amount', StringType(), True), StructField('Count', StringType(), True), StructField('_TenderType', StringType(), True), StructField('_TypeCode', StringType(), True)]), True), StructField('SES:Nominal', StructType([StructField('Amount', StringType(), True), StructField('Count', StringType(), True), StructField('_TenderType', StringType(), True), StructField('_TypeCode', StringType(), True)]), True), StructField('Short', StructType([StructField('Amount', StringType(), True), StructField('_TenderType', StringType(), True)]), True)]), True), True)]), True)]), True), StructField('TillID', StringType(), True), StructField('WorkstationID', StringType(), True), StructField('_CancelFlag', StringType(), True), StructField('_FixVersion', StringType(), True), StructField('_MajorVersion', StringType(), True), StructField('_MinorVersion', StringType(), True), StructField('_SES:InternalFixVersion', StringType(), True), StructField('_SES:InternalMajorVersion', StringType(), True), StructField('_SES:InternalMinorVersion', StringType(), True), StructField('_TrainingModeFlag', StringType(), True), StructField('SourceFilename', StringType(), True), StructField('IngestTimeStamp', TimestampType(), True), StructField('businessdate', DateType(), True)])






ControlTable = config_global[config_global_key]["unity_catalog_name"]["bronze"] + "." + config_global[config_global_key]["schema_name"]["bronze"]["fact_pos"]+"."+config["data_sources"]["gk"]["fact"]["src_tables"]["src_control_table"]
RetailTransactionTable = config_global[config_global_key]["unity_catalog_name"]["bronze"] + "." + config_global[config_global_key]["schema_name"]["bronze"]["fact_pos"]+"."+config["data_sources"]["gk"]["fact"]["src_tables"]["src_retail_transaction_table"]
TenderControlTable = config_global[config_global_key]["unity_catalog_name"]["bronze"] + "." + config_global[config_global_key]["schema_name"]["bronze"]["fact_pos"]+"."+config["data_sources"]["gk"]["fact"]["src_tables"]["src_tender_control_table"]
retail_path="abfss:"+"//"+config_global[config_global_key]['azure_storage']['container']+"@"+config_global[config_global_key]['azure_storage']['storage_account']+"."+"dfs.core.windows.net"+"/"+config_global[config_global_key]['azure_storage']['folder_name']+"/"+config_global[config_global_key]['azure_storage']['fact_bronze_container']+"/"+"retail_gk_partitioned"
control_path="abfss:"+"//"+config_global[config_global_key]['azure_storage']['container']+"@"+config_global[config_global_key]['azure_storage']['storage_account']+"."+"dfs.core.windows.net"+"/"+config_global[config_global_key]['azure_storage']['folder_name']+"/"+config_global[config_global_key]['azure_storage']['fact_bronze_container']+"/"+"control_gk_partitioned"
trender_control_path="abfss:"+"//"+config_global[config_global_key]['azure_storage']['container']+"@"+config_global[config_global_key]['azure_storage']['storage_account']+"."+"dfs.core.windows.net"+"/"+config_global[config_global_key]['azure_storage']['folder_name']+"/"+config_global[config_global_key]['azure_storage']['fact_bronze_container']+"/"+"tender_control_gk_partitioned"
print(trender_control_path)
source_path = "abfss:"+"//"+config_global[config_global_key]['azure_storage']['gk_container']+"@"+config_global[config_global_key]['azure_storage']['storage_account']+"."+"dfs.core.windows.net"+"/"+"cdm/cdm_unprocessed"
destination_path = "abfss:"+"//"+config_global[config_global_key]['azure_storage']['gk_container']+"@"+config_global[config_global_key]['azure_storage']['storage_account']+"."+"dfs.core.windows.net"+"/"+"cdm/cdm_processed"



from pyspark.sql.functions import *
from pyspark.sql import functions as F
from pyspark.sql.functions import input_file_name,current_timestamp




#.withColumn("SourceFilename",lit('file_name'))\
path = "abfss:"+"//"+config_global[config_global_key]['azure_storage']['gk_container']+"@"+config_global[config_global_key]['azure_storage']['storage_account']+"."+"dfs.core.windows.net"+"/"+"cdm/cdm_unprocessed"
df_all = spark.read.format("xml").option("rootTag","POS").option("rowTag", "Transaction").load(path,schema = schema).withColumn("SourceFilename",input_file_name()).withColumn("IngestTimeStamp",current_timestamp())




df_r=spark.sql(f"select distinct SourceFileName from {RetailTransactionTable}")
df_retail = df_all.where("RetailTransaction is not null").drop("ControlTransaction","TenderControlTransaction")
df_retail = df_retail.alias("dfa").join(df_r.alias("dfb"), on=F.col("dfa.SourceFilename")==F.col("dfb.SourceFilename"),how="left").where("dfb.SourceFilename is null").select("dfa.*")
df=df_retail.withColumn("businessdate",substring(df_retail.BusinessDayDate,1,10).cast("date"))
df.count()
df.write.partitionBy("businessdate").format("delta").option("batchsize","60000").option("delta.columnMapping.mode", "name").mode("append").option("overwriteSchema", "true").option("path",retail_path).saveAsTable(RetailTransactionTable)




path = "abfss:"+"//"+config_global[config_global_key]['azure_storage']['gk_container']+"@"+config_global[config_global_key]['azure_storage']['storage_account']+"."+"dfs.core.windows.net"+"/"+"cdm/cdm_unprocessed"
df_control = spark.read.format("xml").option("rootTag","POS").option("rowTag", "Transaction").load(path,schema = control_schema).withColumn("SourceFilename",input_file_name()).withColumn("IngestTimeStamp",current_timestamp())




df_c=spark.sql(f"select distinct SourceFileName from {ControlTable}")
df_ctrl = df_control.where("ControlTransaction is not null").drop("RetailTransaction","TenderControlTransaction")
df_ctrl = df_ctrl.alias("dfa").join(df_c.alias("dfb"), on=F.col("dfa.SourceFilename")==F.col("dfb.SourceFilename"),how="left").where("dfb.SourceFilename is null").select("dfa.*")
df=df_ctrl.withColumn("businessdate",substring(df_ctrl.BusinessDayDate,1,10).cast("date"))
df.count()
df.write.partitionBy("businessdate").format("delta").option("batchsize","60000").option("mergeSchema", "true").option("delta.columnMapping.mode", "name").option("overwriteSchema", "true").mode("append").option("path",control_path).saveAsTable(ControlTable)




path = "abfss:"+"//"+config_global[config_global_key]['azure_storage']['gk_container']+"@"+config_global[config_global_key]['azure_storage']['storage_account']+"."+"dfs.core.windows.net"+"/"+"cdm/cdm_unprocessed"
df_tender_control = spark.read.format("xml").option("rootTag","POS").option("rowTag", "Transaction").load(path,schema = tender_control_schema).withColumn("SourceFilename",input_file_name()).withColumn("IngestTimeStamp",current_timestamp())




df_ct=spark.sql(f"select distinct SourceFileName from {TenderControlTable}")
df_tct = df_tender_control.where("TenderControlTransaction is not null").drop("ControlTransaction","RetailTransaction")
df_tct = df_tct.alias("dfa").join(df_ct.alias("dfb"), on=F.col("dfa.SourceFilename")==F.col("dfb.SourceFilename"),how="left").where("dfb.SourceFilename is null").select("dfa.*")
df=df_tct.withColumn("businessdate",substring(df_tct.BusinessDayDate,1,10).cast("date"))
df.count()
df.write.partitionBy("businessdate").format("delta").option("batchsize","60000").option("mergeSchema", "true").option("delta.columnMapping.mode", "name").option("overwriteSchema", "true").mode("append").option("path",trender_control_path).saveAsTable(TenderControlTable)




